import Head from 'next/head';
import styles from '@/styles/Home.module.css';
import axios from 'axios';

import { GoogleLogin, GoogleOAuthProvider } from '@react-oauth/google';
import jwtDecode from 'jwt-decode';
import { useEffect } from 'react';
import Router from 'next/router';
import FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';
// import GoogleLogin from 'react-google-login';

export default function Home() {
  const onClickKakaoLogin = async () => {
    const kakaoLoginUri = `https://kauth.kakao.com/oauth/authorize?response_type=code&client_id=${process.env.NEXT_PUBLIC_KAKAO_API}&redirect_uri=${process.env.NEXT_PUBLIC_KAKAO_REDIRECT_URL}`;

    window.location.href = kakaoLoginUri;
  };

  useEffect(() => {
    const naver = (window as any).naver;
    let naverLogin: any;
    const login = () => {
      naverLogin = new naver.LoginWithNaverId({
        clientId: process.env.NEXT_PUBLIC_NAVER_CLIENT_ID, // ClientID
        callbackUrl: process.env.NEXT_PUBLIC_NAVER_REDIRECT_URL, // Callback URL
        isPopup: false, // 팝업 형태로 인증 여부
        loginButton: {
          color: 'green', // 색상
          type: 3, // 버튼 크기
          height: '60', // 버튼 높이
        }, // 로그인 버튼 설정
      });

      naverLogin.init();
    };

    const getToken = () => {
      const hash = Router.asPath.split('#')[1]; // 네이버 로그인을 통해 전달받은 hash 값
      console.log(hash);
      if (hash) {
        const token = hash.split('=')[1].split('&')[0]; // token값 확인
        naverLogin.getLoginStatus((status: any) => {
          if (status) {
            // 로그인 상태 값이 있을 경우
            console.log(naverLogin.user); // 사용자 정보 조회
          }
        });
      }
    };

    login();
    getToken();
  }, []);

  const handleFacebookLogin = (res: any) => {
    console.log(res);
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <h1>Social Login</h1>
      <div className={styles.buttons}>
        <div
          className={styles['social-login-button']}
          onClick={onClickKakaoLogin}
        >
          카카오
        </div>

        <GoogleOAuthProvider
          clientId={process.env.NEXT_PUBLIC_GOOGLE_CLIENT_ID || ''}
        >
          <GoogleLogin
            onSuccess={(res) => {
              console.log(res);
              const decoding = jwtDecode(res.credential || '');
              console.log(decoding);
            }}
            onError={() => console.log('error on google login')}
          />
        </GoogleOAuthProvider>
        <FacebookLogin
          appId={`${process.env.NEXT_PUBLIC_FACEBOOK_APP_ID}`}
          fields="name,email,picture"
          callback={handleFacebookLogin}
          render={(renderProps) => (
            <div
              className={styles['social-login-button']}
              onClick={renderProps.onClick}
            >
              페이스북 로그인
            </div>
          )}
        />
        <div id="naverIdLogin" />
      </div>
    </>
  );
}
